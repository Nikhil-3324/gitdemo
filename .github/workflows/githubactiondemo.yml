name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  workflow_dispatch:

env:
  ARTIFACTORY_URL_DEV: "enterpriseprotal-docker-dev-local.artifactory.dhl.com"
  ARTIFACTORY_REPO_DEV: "enterpriseprotal-docker-dev"
  JAVA_VERSION: "17"
  MVN_VERSION: "3.8.1"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Maven
        uses: s4u/setup-maven-action@v1
        with:
          maven-version: ${{ env.MVN_VERSION }}

      - name: Build Artifact
        run: mvn clean package -B -DskipTests

      - name: Authenticate with Artifactory
        run: echo "${{ secrets.ARTIFACTORY_TOKEN }}" | docker login ${{ env.ARTIFACTORY_URL_DEV }} -u ${{ secrets.ARTIFACTORY_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.ref_name }}-${{ github.run_number }}
          docker build -t ${{ env.ARTIFACTORY_URL_DEV }}/${{ env.ARTIFACTORY_REPO_DEV }}/entportal-${{ secrets.SERVICE_NAME }}:$IMAGE_TAG .
          docker push ${{ env.ARTIFACTORY_URL_DEV }}/${{ env.ARTIFACTORY_REPO_DEV }}/entportal-${{ secrets.SERVICE_NAME }}:$IMAGE_TAG

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to OpenShift
        run: |
          oc login --username=${{ secrets.OCP_USERNAME }} --password=${{ secrets.OCP_PASSWORD }} --server=https://api.mykulocp001.dhl.com:6443
          oc project ecs-enterprise-portal-dev

      - name: Apply Kubernetes Configurations
        run: |
          envsubst < deployment.yaml | oc apply -f -
          oc rollout status deployment/entportal-${{ secrets.SERVICE_NAME }}
          echo "Deployment Successful in dev"
